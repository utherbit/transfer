// Code generated by klad.rupu.ru/rupuru/eda/backend/cmd/gen/transfer; DO NOT EDIT.

package simpleTypes

//go:generate go run klad.rupu.ru/rupuru/eda/backend/cmd/gen/transfer --type Entity
type EntityDTO struct {
	ID              int
	Name            string
	IntField        int
	Int8Field       int8
	Int16Field      int16
	Int32Field      int32
	Int64Field      int64
	UintField       uint
	Uint8Field      uint8
	Uint16Field     uint16
	Uint32Field     uint32
	Uint64Field     uint64
	Float32Field    float32
	Float64Field    float64
	Complex64Field  complex64
	Complex128Field complex128
	UintptrField    uintptr
	ByteField       byte
	BoolField       bool
	RuneField       rune
}

func (t *EntityDTO) Init(entity Entity) {
	t.ID = entity.ID
	t.Name = entity.name
	t.IntField = entity.intField
	t.Int8Field = entity.int8Field
	t.Int16Field = entity.int16Field
	t.Int32Field = entity.int32Field
	t.Int64Field = entity.int64Field
	t.UintField = entity.uintField
	t.Uint8Field = entity.uint8Field
	t.Uint16Field = entity.uint16Field
	t.Uint32Field = entity.uint32Field
	t.Uint64Field = entity.uint64Field
	t.Float32Field = entity.float32Field
	t.Float64Field = entity.float64Field
	t.Complex64Field = entity.complex64Field
	t.Complex128Field = entity.complex128Field
	t.UintptrField = entity.uintptrField
	t.ByteField = entity.byteField
	t.BoolField = entity.boolField
	t.RuneField = entity.runeField
}

func (t EntityDTO) Base() Entity {
	return Entity{
		ID:              t.ID,
		name:            t.Name,
		intField:        t.IntField,
		int8Field:       t.Int8Field,
		int16Field:      t.Int16Field,
		int32Field:      t.Int32Field,
		int64Field:      t.Int64Field,
		uintField:       t.UintField,
		uint8Field:      t.Uint8Field,
		uint16Field:     t.Uint16Field,
		uint32Field:     t.Uint32Field,
		uint64Field:     t.Uint64Field,
		float32Field:    t.Float32Field,
		float64Field:    t.Float64Field,
		complex64Field:  t.Complex64Field,
		complex128Field: t.Complex128Field,
		uintptrField:    t.UintptrField,
		byteField:       t.ByteField,
		boolField:       t.BoolField,
		runeField:       t.RuneField,
	}
}
